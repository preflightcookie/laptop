#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the Red Squirrel laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# Whilst customised for Red Squirrel work, this script is 99% based on thoughtbot's 
# laptop script.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch $HOME/.zshrc
fi

if [[ ":$PATH:" != *":$HOME/.bin:"* ]]; then
  printf 'export PATH="$HOME/.bin:$PATH"\n' >> ~/.zshrc
  export PATH="$HOME/.bin:$PATH"
fi
### end common-components/check-home-bin

fancy_echo() {
  printf "\n%b\n" "$1"
}
### end common-components/shared-functions

fancy_echo "Changing your shell to zsh ..."
  chsh -s $(which zsh)
### end common-components/zsh

if [[ -f /etc/zshenv ]]; then
  fancy_echo "Fixing OSX zsh environment bug ..."
    sudo mv /etc/{zshenv,zshrc}
fi
### end mac-components/zsh-fix

if ! command -v brew &>/dev/null; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"

  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      printf '\n# recommended by brew doctor\n' >> ~/.zshrc
      printf 'export PATH="/usr/local/bin:$PATH"\n' >> ~/.zshrc
      export PATH="/usr/local/bin:$PATH"
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update
### end mac-components/homebrew

if ! command -v babushka &>/dev/null; then
  fancy_echo "Installing Babushka, a humble tool for automating computing chores..."
    sh -c "`curl https://babushka.me/up`" </dev/null
else
  fancy_echo "Babushka already installed. Skipping ..."
fi
### end common-components/babushka

fancy_echo "Installing Postgres, a good open source relational database ..."
  brew install postgres --no-python

fancy_echo "Installing Redis, a good key-value database ..."
  brew install redis

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  brew install the_silver_searcher

fancy_echo "Installing vim from Homebrew to get the latest version ..."
  brew install vim

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  brew install tmux

fancy_echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  brew install reattach-to-user-namespace

fancy_echo "Installing ImageMagick, to crop and resize images ..."
  brew install imagemagick

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  brew install watch### end mac-components/packages

fancy_echo "Starting Postgres ..."
  brew services start postgres
### end mac-components/start-services

if ! command -v rvm &>/dev/null; then
  fancy_echo "Installing RVM, a command-line tool which allows you to easily install, manage, and work with multiple ruby environments..."
    curl -sSL https://get.rvm.io | bash
  fi
  
  fancy_echo "Re-loading profile to access rvm functions ..."
  source ~/.rvm/scripts/rvm
else
  fancy_echo "RVM already installed. Skipping ..."
fi

### end common-components/rvm

fancy_echo "Upgrading and linking OpenSSL ..."
  brew install openssl
  brew link openssl --force
  brew install curl-ca-bundle
### end mac-components/openssl

fancy_echo "Upgrading and linking git ..."
  brew install git
  brew link git --force
### end mac-components/git

ruby_version="$(curl -sSL https://raw.githubusercontent.com/redsquirreldev/laptop/master/versions/ruby)"

fancy_echo "Installing Ruby $ruby_version ..."
  rvm install $ruby_version

fancy_echo "Setting $ruby_version as global default Ruby ..."
  rvm --default use $ruby_version

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system

fancy_echo "Installing Bundler to install project-specific Ruby gems ..."
  gem install bundler --no-document --pre
### end common-components/ruby-environment

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
### end mac-components/bundler

fancy_echo "Installing Heroku CLI client ..."
  brew install heroku-toolbelt

fancy_echo "Installing the heroku-config plugin to pull config variables locally to be used as ENV variables ..."
  heroku plugins:install git://github.com/ddollar/heroku-config.git
### end mac-components/heroku

fancy_echo "Installing GitHub CLI client ..."
  brew install hub
### end mac-components/github

fancy_echo "Installing Homebrew cask..."
  brew tap phinze/homebrew-cask
  brew install brew-cask### end mac-components/cask

fancy_echo "Installing Google Chrome..."
  brew cask install google-chrome### end mac-components/common-apps

